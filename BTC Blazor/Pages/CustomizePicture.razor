@page "/CustomizePicture/{imageUrl}"

@using Bulk_Thumbnail_Creator.Enums;

@inject Bulk_Thumbnail_Creator.PictureObjects.PictureDataService PicDataService

<h1>Bulk Thumbnail Creator</h1>

<div class="grid-container">

    <div class="picture-data-box">

        <h3 class="studded-header">Picture Data</h3>

        <img src="@ImageURL" style="max-width: 100%;" />

        <MudText Color="Color.Secondary">CurrentFont:@CurrentPagePictureData.ParamForTextCreation.Font</MudText>
        <MudText Color="Color.Secondary">Output Type:@CurrentPagePictureData.OutputType</MudText>
        <MudText Color="Color.Secondary">Filename @CurrentPagePictureData.FileName:</MudText>
        <MudText Color="Color.Secondary">Varieties of this Picture: @CurrentPagePictureData.Varieties.Count</MudText>
        <MudText Color="Color.Secondary">CurrentBox: @CurrentPagePictureData.ParamForTextCreation.CurrentBox</MudText>

        @foreach (var colorBox in Enum.GetValues(typeof(ColorGroup)).Cast<ColorGroup>())
        {

            <div class="color-box">
                <header class="studded-header">@colorBox.ToString()</header>
                <MudText>Hue: @GetColorValue(colorBox, ColorProperty.Hue)</MudText>
                <MudText>Saturation: @GetColorValue(colorBox, ColorProperty.Saturation)</MudText>
                <MudText>Luminance: @GetColorValue(colorBox, ColorProperty.Luminance)</MudText>
            </div>

        }

    </div>

    <div class="color-box-container">

        <MudColorPicker PickerVariant="PickerVariant.Dialog" ColorPickerMode="ColorPickerMode.HSL" DisableAlpha DisableModeSwitch></MudColorPicker>

        <MudSelect AdornmentColor="Color.Primary" Label="Select a Color to edit" @bind-Value="PickedGroup">

            @foreach (var Colorz in colorBoxes)
            {

                <MudSelectItem Value="@Colorz"><MudText Color="Color.Secondary">@Colorz</MudText></MudSelectItem>
            }

        </MudSelect>

        <MudSelect AdornmentColor="Color.Primary" Label="Select an output box" @bind-Value="PickedBox">

            @foreach (var key in CurrentPagePictureData.ParamForTextCreation.Boxes.Keys)
            {
                var value = CurrentPagePictureData.ParamForTextCreation.Boxes[key];
                <MudSelectItem Value="@key"><MudText Color="Color.Secondary">@key</MudText></MudSelectItem>
            }

        </MudSelect>

        <MudSelect AdornmentColor="Color.Primary" Label="Select a font" @bind-Value="PickedFont">

            @foreach (var font in AvailableFonts)
            {
                
                <MudSelectItem Value="@font"><MudText Color="Color.Secondary">@font</MudText></MudSelectItem>
            }

        </MudSelect>

        <MudText>PictureData To Produce</MudText>
        <MudText>Chosen Font: @Path.GetFileName(PickedFont)</MudText>
        <MudText>Chosen Box: @PickedBox.ToString()</MudText>

        <header>BorderColor Values</header>
        <MudText>Hue: @CurrentPagePictureData.ParamForTextCreation.BorderColor.Hue</MudText>
        <MudText>Saturation: @CurrentPagePictureData.ParamForTextCreation.BorderColor.Saturation</MudText>
        <MudText>Luminance: @CurrentPagePictureData.ParamForTextCreation.BorderColor.Luminance</MudText>

        <MudText>Hue: @CurrentPagePictureData.ParamForTextCreation.FillColor.Hue</MudText>
        <MudText>Saturation: @CurrentPagePictureData.ParamForTextCreation.FillColor.Saturation</MudText>
        <MudText>Luminance: @CurrentPagePictureData.ParamForTextCreation.FillColor.Luminance</MudText>

        <MudText>Hue: @CurrentPagePictureData.ParamForTextCreation.StrokeColor.Hue</MudText>
        <MudText>Saturation: @CurrentPagePictureData.ParamForTextCreation.StrokeColor.Saturation</MudText>
        <MudText>Luminance: @CurrentPagePictureData.ParamForTextCreation.StrokeColor.Luminance</MudText>

        <MudButton Disabled="@_processing" OnClick="CreateCustomPicDataObject" Variant="Variant.Filled" Color="Color.Primary">

            @if (_processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" Color="Color.Secondary" />
                <MudText Class="ms-2">Processing</MudText>
            }
            else
            {
                <MudText>Produce Picture</MudText>
            }

        </MudButton>

    </div>

</div>

@code
{
    private bool _processing = false;

    private List<ColorGroup> colorBoxes = Enum.GetValues(typeof(ColorGroup)).Cast<ColorGroup>().ToList();

    private ColorGroup PickedGroup;

    private bool colorPickerIsOpen = false;

    private MudBlazor.Utilities.MudColor selectedColor;

    private enum ColorProperty
    {
        Hue,
        Saturation,
        Luminance
    }

    private enum ColorGroup
    {
        FillColor,
        BorderColor,
        StrokeColor
    }

    private void OpenColorPicker()
    {
        colorPickerIsOpen = true;
    }

    private void CloseColorPicker()
    {
        colorPickerIsOpen = false;
        // Handle the selectedColor based on selectedColorGroup
        // Update your CurrentPagePictureData with the selected color.
        // Make sure to use your project-specific types and properties.
    }

}

