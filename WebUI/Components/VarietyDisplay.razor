@using Bulk_Thumbnail_Creator.Services;
@using Bulk_Thumbnail_Creator.PictureObjects;
@using Bulk_Thumbnail_Creator.Interfaces;
@inject PicDataService PicDataService;
@inject ILogService logger;

<div class="image-container">
    @if (VarietyUrls != null)
    {

        @for (int ClickedImage = 0; ClickedImage < VarietyUrls.Count; ClickedImage++)
        {
            var index = ClickedImage;

            <img class="image-button" src="@VarietyUrls[index]" @onclick="(() => NavToCustomizePicture(VarietyUrls[index]))" />
            @if ((ClickedImage + 1) % 3 == 0)
            {
                <div style="flex-basis: 100%; height: 0;"></div>
            }
        }
    }
</div>

@code
{
    [Parameter]
    public PictureData ParentPictureProp { get; set; }

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private void NavToCustomizePicture(string imageURL)
    {
        NavigationManager.NavigateTo($"/CustomizePicture/{Uri.EscapeDataString(imageURL)}");
    }

    private List<string> _VarietyUrls = new();

    [Parameter]
    public List<string> VarietyUrls { get { return _VarietyUrls; } set { _VarietyUrls = value; } }

}

<style>
    /* Style the image container */
    .image-container2 {
        display: flex;
        flex-wrap: wrap;
        height: 100%;
        justify-content: center;
    }

    image-container img {
        max-width: calc(50% - 50px); /* Set the width for each image in the row */
        margin: 10px;
    }
</style>

<style>
    .image-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
    }

        .image-container img {
            max-width: calc(30% - 50px); /* Set the width for each image in the row */
            margin: 10px;
        }
</style>