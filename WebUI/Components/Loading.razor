@using Bulk_Thumbnail_Creator.Interfaces;
@inject ILogService Logger

@if (processing)
{
    <MudContainer @onclick="ExpandLog">
    <MudPaper Elevation="4" Class="small">
        @foreach(var entry in LogEntries.TakeLast(takeEntries))
        {
            <MudTextField  AdornmentIcon="" Label="Log Entry" Multiline="true" Variant="Variant.Filled" FullWidth="true" ReadOnly="true" Value="@entry"/>
        }
    </MudPaper>
</MudContainer>
}

@code {
    private bool IsInitialized { get; set; } = false;

    [Parameter]
    public int takeEntries { get; set; } = 1;

    [Parameter]
    public bool processing { get; set; }

    private List<string> LogEntries = new List<string>();

    protected override void OnInitialized()
    {
        Logger.LogEntryAdded += OnLogEntryAdded;
        IsInitialized = true;
    }

    private void OnLogEntryAdded(string logEntry)
    {
        LogEntries.Add(logEntry);
        InvokeAsync(() => StateHasChanged());
    }

    private void ExpandLog()
    {
        if (takeEntries == int.MaxValue)
        {
            takeEntries = 1;
        }
        else
        {
            // Set TakeEntries to its maximum value when the loading component is clicked
            takeEntries = int.MaxValue;
        }

    }
}
