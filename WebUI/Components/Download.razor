@using BulkThumbnailCreator
@using BulkThumbnailCreator.Interfaces
@using BulkThumbnailCreator.Services;
@using Microsoft.JSInterop;
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@inject Settings settings;
@inject IJSRuntime JSInterop;
@inject ILogService logger;

<MudGrid>
    <MudPaper Class="mb-4" Elevation="7" Outlined="true">
        <MudText Color="Color.Warning">Downloads</MudText>
        <MudItem>
            @if (!string.IsNullOrEmpty(downloadVideo))
            {
                <MudText Color="Color.Secondary">Download the entire Video</MudText>
                <MudButton Variant="Variant.Filled" OnClick="(() => DLvideo())" Color="Color.Tertiary">Download</MudButton>
            }
        </MudItem>
        <MudItem>
            <MudText Color="Color.Secondary">Download the output directory of unedited files</MudText>
            <MudButton Variant="Variant.Filled" href="@dlOutputDir" Color="Color.Tertiary">Download</MudButton>
        </MudItem>
        <MudItem>
            <MudText Color="Color.Secondary">Download the Text Added Directory</MudText>
            <MudButton Variant="Variant.Filled" href="@dlTextAddedDir" Color="Color.Tertiary">Download</MudButton>
        </MudItem>
        <MudItem>
            <MudText Color="Color.Secondary">Download Variety Directory</MudText>
            <MudButton Variant="Variant.Filled" href="@dlVarDir" Color="Color.Tertiary">Download</MudButton>
        </MudItem>
    </MudPaper>
</MudGrid>

@code
{
    [Parameter]
    public string downloadVideo { get; set; }
    private string dlOutputDir { get; set; }
    private string dlTextAddedDir { get; set; }
    private string dlVarDir { get; set; }

    protected override void OnInitialized()
    {
        DownloadVideo();
        DownloadOutPutDir();
        DownloadTextAddedDir();
        DownloadVarietyDir();
    }

    private async Task DLvideo()
    {
        await JSInterop.InvokeVoidAsync("downloadFileFromUrl", downloadVideo);
    }

    private void DownloadVideo()
    {
        // feed the video to wwwroot loc for downloading
        string videoname;
        @if (!string.IsNullOrEmpty(downloadVideo))
        {
            videoname = Path.GetFileName(downloadVideo);
        }
        else
        {
            videoname = Path.GetFileName(settings.PathToVideo);
        }
        string diroffile = "";
        if (videoname is not null)
        {
            if (!File.Exists($"wwwroot/{videoname}"))
            {
                File.Copy($"{settings.YTDLOutPutDir}/{videoname}", $"wwwroot/{videoname}");
            }
            diroffile = Path.GetFileName($"wwwwroot/{videoname}");
        }
        downloadVideo = diroffile;
    }

    private void DownloadOutPutDir()
    {
        // download outputdir
        string zippedOutPutDir = ZipService.ZipOutputDir(settings);
        dlOutputDir = zippedOutPutDir;
    }

    private void DownloadTextAddedDir()
    {
        // download TextAddedDir
        string zippedTextAddedDir = ZipService.ZipTextAddedDir(settings);
        dlTextAddedDir = zippedTextAddedDir;
    }

    private void DownloadVarietyDir()
    {
        // download Variety Dir
        dlVarDir = ZipService.ZipVarietyDir(settings);
    }
}